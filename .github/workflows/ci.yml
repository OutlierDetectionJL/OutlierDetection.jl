name: CI
on:
  - push
  - pull_request
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.5'
          - '1.6'
          - '1'
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v2
        with:
          file: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - run: |
          julia --project=docs -e '
            using Pkg
            Pkg.develop(PackageSpec(path=pwd()))
            Pkg.instantiate()'
      - run: |
          julia --project=docs -e '
            using Documenter: doctest
            using OutlierDetection
            doctest(OutlierDetection)'
      - run: julia --project=docs docs/make.jl
        env:
          DATADEPS_ALWAYS_ACCEPT: true
      - run: julia --project=docs docs/deploy.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
  versionize:
    needs: docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-node@v2
    - uses: actions/checkout@v2
      with:
        ref: gh-pages
    - run: |
        node -e "var vm=require('vm'),fs=require('fs'),context={},data=fs.readFileSync('./versions.js');vm.runInNewContext(data,context);var result=[];context.DOC_VERSIONS.forEach(function(s){aliases=[],context.DOCUMENTER_NEWEST.startsWith(s)&&aliases.push('dev'),context.DOCUMENTER_STABLE.startsWith(s)&&aliases.push('stable'),result.push({version:s,title:s,aliases:aliases})}),fs.writeFileSync('./versions.json',JSON.stringify(result));"
    - run: |
        git config user.name "versionize"
        git config user.email "davnn@users.noreply.github.com"
        git add .
        git commit -m "versionize" || echo "No changes to commit"
        git push
